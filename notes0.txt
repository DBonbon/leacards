python manage.py shell

from cms.models import GamePage, CardsPage


take then attributes of Page
a.title
a.slug
to get the parent page
aattribute of parent:
b.language

a= page.
b = a.streamFieldName
len(b) --> how many item in this given block

if in template
{{ b|length }}

c = len(b)
d = b[1].get("card_title")
for i in range(c):
    i+=1
    print(i)
    print(b.index[i])

b[2][1]index
counter = 1

counter = counter +1

b[1].value()
b[1].block_type
b[1].bound_blocks
.bound_blocks.card_title

for block in b:
    if block.block_type=="card":
        print(value.bound_blocks.card_title)
    if block.block_type=="card_title":
        block.value.card_title

for block in b:
    if block.block_type=="card":
        for item in block:
            if item.block_type=="card_title":
                print(item)


def main_image(self):
for block in a.cards.values:
    if block.block_type == 'card':
        for slide in block.value:
            if slide == 'card_title':
                print(value.slide)


for block in b:
    if block.block_type == 'card':
        print(block.value.card_title)
        for slide in block.value:
    {% for block in page.body %}
        {% if block.block_type == 'heading' %}
            <h1>{{ block.value.heading }}</h1>


if b:
    for block in b:

for block in b:
    if block.block_type == 'card':
        print(value.card_title)
my_page.body b.blocks_by_name('card')

print with colord
class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m' #return to normal color
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

print(bcolors.OKBLUE + "Warning: No active frommets remain. Continue?" + bcolors.ENDC)


